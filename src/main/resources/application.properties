#配置服务端口
server.port=8080

#配置数据源
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/tmalldemodb?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root1234
#spring session-redis配置
spring.redis.host=47.113.231.31
spring.redis.port=6379
spring.redis.password=linab

##Tomcat高并发优化
##tomcat处理请求时的线程池最大核心线程数（核数+1）
#server.tomcat.min-spare-threads=9
##建立连接超时时间，单位毫秒【它会同时配置protocol的KeepAliveTimeout和protocol的ConnectionTimeout两个参数】
#server.connection-timeout=20000
#server.tomcat.max-connections=30000
##tomcat处理请求时的线程池的最大线程数
#server.tomcat.max-threads=400
##Http服务（Tcp服务）连接的backlog（类似线程池里的等待队列）
#server.tomcat.accept-count=3000

#underrow优化
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 不要设置过大，如果过大，启动项目会报错：打开文件数过多
# CPU有几核，就填写几。
server.undertow.io-threads=8
# 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
# 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
server.undertow.worker-threads=2000
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
server.undertow.buffer-size=1024
# 是否分配的直接内存(NIO直接分配的堆外内存)
server.undertow.direct-buffers=true



#redis
redis.host=47.113.231.31
redis.port=6379
#redis.timeout=3
redis.password=linab
#redis.poolMaxTotal=10
#redis.poolMaxIdle=10
#redis.poolMaxWait=3

redis.timeout=10
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500

#配置编码
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#配置页面
server.servlet.context-path=/tmall
spring.mvc.view.prefix=/WEB-INF/page/
spring.mvc.view.suffix=.jsp

#配置上传文件大小
spring.servlet.multipart.max-file-size=3MB

#配置日志
logging.level.root=info

#配置Mybatis
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-aliases-package=com.xq.tmall.entity

#配置rocketMQ
rocketmq.nameServer=localhost:9876
rocketmq.producer.group=my-group1
rocketmq.producer.sendMessageTimeout=30000
rocketmq.extNameServer=127.0.0.1:9876
